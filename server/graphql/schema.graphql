type Query {
  login(email: String! password: String!): AuthData!
  getPosts(page: Int): PostsData!
  getPost(id: ID!): Post!
  getUser: User!
}

type AuthData {
  token: String!
  userId: String!
}

type TestData {
  text: String!
  views: Int!
}

type User {
  _id: ID!
  email: String!
  password: String!
  name: String
  status: String!
  posts: [Post!]!
}

type Post {
  _id: ID!
  title: String!
  content: String!
  imageUrl: String!
  creator: User!
  createdAt: String!
  updatedAt: String!
}

type PostsData {
  posts: [Post!]!
  count: Int!
}

type Mutation {
  signup(input: SignupUserData): User!
  createPost(input: PostData): Post!
  updatePost(id: ID!, input: PostData): Post!
  deletePost(id: ID!): Boolean
  updateStatus(status: String!): User!
}

input SignupUserData {
  email: String!
  password: String!
  name: String!
}

input PostData {
  title: String!
  content: String!
  imageUrl: String
}